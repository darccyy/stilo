use stilo::println_styles;

fn main() {
    println_styles!(
        "\n";
        "use ": Red;
        "std": Yellow;
        "::": Magenta;
        "ops": Yellow;
        "::": Magenta;
        "Add": Yellow;
        "\n\n";
        "#[repr(transparent)]": Blue;
        "\n";
        "struct ": Magenta;
        "Wrapper": Yellow;
        "<": Cyan;
        "T": Yellow;
        "> ": Cyan;
        "{{": Yellow;
        "\n    value";
        ": ": Magenta;
        "T": Yellow;
        ",": Cyan;
        "\n}}": Yellow;
        "\n\n";
        "impl ": Red;
        "Add": Yellow;
        "<": Cyan;
        "f32": Yellow;
        "> for ": Cyan;
        "Wrapper": Yellow;
        "<": Cyan;
        "f32": Yellow;
        "> ": Cyan;
        "{{": Yellow;
        "\n    type ": Magenta;
        "Output ": Yellow;
        "= ": Magenta;
        "Wrapper": Yellow;
        "<": Cyan;
        "f32": Yellow;
        ">;": Cyan;
        "\n\n    fn ": Red;
        "add": Blue;
        "(": Magenta;
        "self": Red;
        ", ": Cyan;
        "rhs";
        ": ": Magenta;
        "f32": Yellow;
        ") -> ": Magenta;
        "Self ": Red;
        "}}": Magenta;
        "\n        ";
        "todo!(": Blue;
        "\"": Cyan;
        "not yet implemented :(": Green;
        "\"": Cyan;
        ")": Blue;
        "\n    }}": Magenta;
        "\n}}": Yellow;
        "\n\nfn ": Red;
        "frobnicate": Blue;
        "<'": Cyan;
        "a": Yellow;
        ">": Cyan;
        "(": Yellow;
        "wrapper";
        ": &": Magenta;
        "'": Cyan;
        "a ": Yellow;
        "mut ": Magenta;
        "Wrapper": Yellow;
        "<": Cyan;
        "f32": Yellow;
        ">": Cyan;
        ") ": Yellow;
        " -> &": Magenta;
        "'": Cyan;
        "a f32 {{": Yellow;
        "\n    wrapper";
        ".": Magenta;
        "value ";
        "+= ": Magenta;
        "1": Red;
        ".": Cyan;
        "0": Red;
        ";": Cyan;
        "\n    unsafe ": Red;
        "{{": Magenta;
        "\n        &*": Magenta;
        "(": Blue;
        "wrapper ";
        "as ": Red;
        "*const ": Magenta;
        "_";
        ")": Blue;
        "\n    }}": Magenta;
        "\n}}": Yellow;
    );
}
